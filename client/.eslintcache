[{"/home/node/app/src/index.js":"1","/home/node/app/src/App.js":"2","/home/node/app/src/components/demo.js":"3","/home/node/app/src/components/transaction/TransactionsList.js":"4","/home/node/app/src/components/transaction/AddTransaction.js":"5","/home/node/app/src/components/auth/Register.js":"6","/home/node/app/src/components/auth/Login.js":"7","/home/node/app/src/services/AuthService.js":"8","/home/node/app/src/http-common.js":"9","/home/node/app/src/components/Merchand/MerchandAbout.js":"10","/home/node/app/src/services/AdminService.js":"11","/home/node/app/src/services/MerchandService.js":"12","/home/node/app/src/components/Admin/MerchantsList.js":"13"},{"size":281,"mtime":1627223201998,"results":"14","hashOfConfig":"15"},{"size":2452,"mtime":1627291116879,"results":"16","hashOfConfig":"17"},{"size":13427,"mtime":1627291116885,"results":"18","hashOfConfig":"17"},{"size":6265,"mtime":1627291116887,"results":"19","hashOfConfig":"17"},{"size":8233,"mtime":1627291116886,"results":"20","hashOfConfig":"17"},{"size":5616,"mtime":1627291116884,"results":"21","hashOfConfig":"17"},{"size":2441,"mtime":1627287233073,"results":"22","hashOfConfig":"15"},{"size":235,"mtime":1627072501229,"results":"23","hashOfConfig":"24"},{"size":325,"mtime":1627204727180,"results":"25","hashOfConfig":"17"},{"size":4859,"mtime":1627291116881,"results":"26","hashOfConfig":"17"},{"size":228,"mtime":1627291116890,"results":"27","hashOfConfig":"17"},{"size":698,"mtime":1627287233076,"results":"28","hashOfConfig":"15"},{"size":697,"mtime":1627292732256,"results":"29","hashOfConfig":"17"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"gc0m5i",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qc24ea",{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},"yb6qtp",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/node/app/src/index.js",["59"],"/home/node/app/src/App.js",[],"/home/node/app/src/components/demo.js",["60","61","62","63","64"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport Collapse from '@material-ui/core/Collapse';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\n\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\n\r\n// icons\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\n\r\n// import DraftsIcon from '@material-ui/icons/Drafts';\r\n// import ExpandLess from '@material-ui/icons/ExpandLess';\r\n// import ExpandMore from '@material-ui/icons/ExpandMore';\r\n// import StarBorder from '@material-ui/icons/StarBorder';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nexport default function MiniDrawer() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleClick = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n    const handleProfileMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMobileMenuClose = () => {\r\n        setMobileMoreAnchorEl(null);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n        handleMobileMenuClose();\r\n    };\r\n\r\n    const handleMobileMenuOpen = (event) => {\r\n        setMobileMoreAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const menuId = 'primary-search-account-menu';\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n            <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n            <MenuItem onClick={handleMenuClose}>Logout</MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    const mobileMenuId = 'primary-search-account-menu-mobile';\r\n    const renderMobileMenu = (\r\n        <Menu\r\n            anchorEl={mobileMoreAnchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={mobileMenuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMobileMenuOpen}\r\n            onClose={handleMobileMenuClose}\r\n        >\r\n            <MenuItem>\r\n                <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                    <Badge badgeContent={4} color=\"secondary\">\r\n                        <MailIcon />\r\n                    </Badge>\r\n                </IconButton>\r\n                <p>Messages</p>\r\n            </MenuItem>\r\n            <MenuItem>\r\n                <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n                    <Badge badgeContent={11} color=\"secondary\">\r\n                        <NotificationsIcon />\r\n                    </Badge>\r\n                </IconButton>\r\n                <p>Notifications</p>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleProfileMenuOpen}>\r\n                <IconButton\r\n                    aria-label=\"account of current user\"\r\n                    aria-controls=\"primary-search-account-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    color=\"inherit\"\r\n                >\r\n                    <AccountCircle />\r\n                </IconButton>\r\n                <p>Profile</p>\r\n            </MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: open,\r\n                        })}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        Dashboard Admin\r\n                    </Typography>\r\n\r\n                    <div className={classes.sectionMobile}>\r\n                        <IconButton\r\n                            aria-label=\"show more\"\r\n                            aria-controls={mobileMenuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleMobileMenuOpen}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <MoreIcon />\r\n                        </IconButton>\r\n                    </div>\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n            {renderMobileMenu}\r\n            {renderMenu}\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n            >\r\n                <div className={classes.toolbar}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    <ListItem button>\r\n                        <ListItemIcon>\r\n                            <HomeIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Dashboard\" />\r\n                    </ListItem>\r\n                    <ListItem button>\r\n                        <ListItemIcon>\r\n                            <AccountBoxIcon />\r\n\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Users\" />\r\n                    </ListItem>\r\n                    <ListItem button>\r\n                        <ListItemIcon>\r\n                            <AddShoppingCartIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Transaction\" />\r\n                    </ListItem>\r\n                    <ListItem button>\r\n                        <ListItemIcon>\r\n                            <SettingsIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Gestion\" />\r\n                    </ListItem>\r\n                    <ListItem button>\r\n                        <ListItemIcon>\r\n                            <MailIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"SMail\" />\r\n                    </ListItem>\r\n\r\n                    {/* {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n                        <ListItem button key={text}>\r\n                            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                        </ListItem>\r\n                    ))} */}\r\n                </List>\r\n                <Divider />\r\n\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n                <Typography paragraph>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt\r\n                    ut labore et dolore magna aliqua. Rhoncus dolor purus non enim praesent elementum\r\n                    facilisis leo vel. Risus at ultrices mi tempus imperdiet. Semper risus in hendrerit\r\n                    gravida rutrum quisque non tellus. Convallis convallis tellus id interdum velit laoreet id\r\n                    donec ultrices. Odio morbi quis commodo odio aenean sed adipiscing. Amet nisl suscipit\r\n                    adipiscing bibendum est ultricies integer quis. Cursus euismod quis viverra nibh cras.\r\n                    Metus vulputate eu scelerisque felis imperdiet proin fermentum leo. Mauris commodo quis\r\n                    imperdiet massa tincidunt. Cras tincidunt lobortis feugiat vivamus at augue. At augue eget\r\n                    arcu dictum varius duis at consectetur lorem. Velit sed ullamcorper morbi tincidunt. Lorem\r\n                    donec massa sapien faucibus et molestie ac.\r\n                </Typography>\r\n                <Typography paragraph>\r\n                    Consequat mauris nunc congue nisi vitae suscipit. Fringilla est ullamcorper eget nulla\r\n                    facilisi etiam dignissim diam. Pulvinar elementum integer enim neque volutpat ac\r\n                    tincidunt. Ornare suspendisse sed nisi lacus sed viverra tellus. Purus sit amet volutpat\r\n                    consequat mauris. Elementum eu facilisis sed odio morbi. Euismod lacinia at quis risus sed\r\n                    vulputate odio. Morbi tincidunt ornare massa eget egestas purus viverra accumsan in. In\r\n                    hendrerit gravida rutrum quisque non tellus orci ac. Pellentesque nec nam aliquam sem et\r\n                    tortor. Habitant morbi tristique senectus et. Adipiscing elit duis tristique sollicitudin\r\n                    nibh sit. Ornare aenean euismod elementum nisi quis eleifend. Commodo viverra maecenas\r\n                    accumsan lacus vel facilisis. Nulla posuere sollicitudin aliquam ultrices sagittis orci a.\r\n                </Typography>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n","/home/node/app/src/components/transaction/TransactionsList.js",["65","66","67","68","69","70","71"],"import { useEffect, useState, useRef } from \"react\";\r\nimport AdminDataService from \"../../services/AdminService\";\r\nimport MerchandDataService from \"../../services/MerchandService\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n\r\nfunction TransactionsList() {\r\n    const [transactions, setTransactions] = useState([]);\r\n    const [currentTransaction, setCurrentTransaction] = useState(null);\r\n    const [currentIndex, setCurrentIndex] = useState(-1);\r\n    const inputSearch = useRef(null);\r\n\r\n    const getTransactions = async () => {\r\n        ////////////////////////////\r\n        // IF (role == ADMIN)\r\n            AdminDataService.getAll()\r\n        // ELSE\r\n            // MerchandDataService.getAll()\r\n        ////////////////////////////\r\n        .then(response => {\r\n            setTransactions(response.data);\r\n            console.log(response.data);\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        });\r\n    }\r\n\r\n    useEffect( () => {\r\n        getTransactions()\r\n    }, [] );\r\n    \r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const data = inputSearch.current.value;\r\n        const res = await fetch('http://localhost:3001/admin/transactions/some', {\r\n            method: \"POST\",\r\n            body: JSON.stringify(data),\r\n        });\r\n        setTransactions(res);\r\n    }\r\n\r\n    const setActiveTransaction = (Transaction, index) => {\r\n        setCurrentTransaction(Transaction);\r\n        setCurrentIndex(index);\r\n    };\r\n    \r\n    const classes = useStyles();\r\n\r\n\r\n    const transactionsList = transactions.map((transaction) => {\r\n        return <tr key={transaction.consumer.email}>\r\n            <td>\r\n                <ul>\r\n                    <li>{transaction.consumer.lastname} {transaction.consumer.firstname}</li>\r\n                    <li>{transaction.consumer.email}</li>\r\n                </ul>\r\n            </td>\r\n            <td> {transaction.facturation} </td>\r\n            <td> {transaction.livraison} </td>\r\n            <td> {transaction.cart} </td>\r\n            <td> {transaction.totalPrice} {transaction.currency}</td>\r\n        </tr>\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <input ref={inputSearch} type=\"text\" placeholder=\"chercher une transaction\"/>\r\n                <input type=\"submit\" value=\"Chercher\" />\r\n            </form>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Client</th>\r\n                        <th>Facturation</th>\r\n                        <th>livraison</th>\r\n                        <th>Panier</th>\r\n                        <th>Montant</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    { transactionsList }\r\n                </tbody>\r\n            </table>\r\n        </>\r\n\r\n        /*\r\n         <div className=\"list row\">\r\n            <div className=\"col-md-6\">\r\n                <h4>Transactions List</h4>\r\n\r\n                <ul className=\"list-group\">\r\n                {Transactions &&\r\n                    Transactions.map((Transaction, index) => (\r\n                    <li\r\n                        className={\r\n                        \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\r\n                        }\r\n                        onClick={() => setActiveTransaction(Transaction, index)}\r\n                        key={index}\r\n                    >\r\n                        {Transaction.name}\r\n                    </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n                {currentTransaction ? (\r\n                <div>\r\n                    <h4>Transaction</h4>\r\n                    <div>\r\n                    <label>\r\n                        <strong>First Name:</strong>\r\n                    </label>{\" \"}\r\n                    {currentTransaction.customer.firstName}\r\n                    </div>\r\n                    <div>\r\n                    <label>\r\n                        <strong>Last Name:</strong>\r\n                    </label>{\" \"}\r\n                    {currentTransaction.customer.lastName}\r\n                    </div>\r\n                    <div>\r\n                    <label>\r\n                        <strong>Total Price:</strong>\r\n                    </label>{\" \"}\r\n                    {currentTransaction.totalPrice}\r\n                    {currentTransaction.currency}\r\n                    \r\n                    </div>\r\n                    <div>\r\n                    <label>\r\n                        <strong>Address:</strong>\r\n                    </label>{\" \"}\r\n                    {currentTransaction.billingAddress.address}\r\n                    </div>\r\n                    <div>\r\n                    <label>\r\n                        <strong>zipCode:</strong>\r\n                    </label>{\" \"}\r\n                    {currentTransaction.billingAddress.zipCode}\r\n                    </div>\r\n                    <div>\r\n                    <label>\r\n                        <strong>City:</strong>\r\n                    </label>{\" \"}\r\n                    {currentTransaction.billingAddress.city}\r\n                    </div>\r\n                    <div>\r\n                    <label>\r\n                        <strong>Country:</strong>\r\n                    </label>{\" \"}\r\n                    {currentTransaction.billingAddress.country}\r\n                    </div>\r\n                    <Link\r\n                    to={\"/Transactions/\" + currentTransaction._id}\r\n                    className=\"badge badge-warning\"\r\n                    >\r\n                    <Button size=\"small\" className={classes.margin}>\r\n                    Edit\r\n                    </Button>\r\n                    </Link>\r\n                </div>\r\n                ) : (\r\n                <div>\r\n                    <br />\r\n                    <p>Please click on a Transaction...</p>\r\n                </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n         */\r\n    );\r\n}\r\n\r\nexport default TransactionsList;\r\n","/home/node/app/src/components/transaction/AddTransaction.js",[],"/home/node/app/src/components/auth/Register.js",["72"],"/home/node/app/src/components/auth/Login.js",[],"/home/node/app/src/services/AuthService.js",["73"],"import http from \"../http-common\";\r\n\r\n\r\nconst login = data => {\r\n  return http.post(\"users/login\", data);\r\n};\r\n\r\nconst register = data => {\r\n  return http.post(\"users/register\", data);\r\n};\r\n\r\nexport default {\r\n  register,\r\n  login,\r\n};","/home/node/app/src/http-common.js",[],"/home/node/app/src/components/Merchand/MerchandAbout.js",["74","75","76","77"],"/home/node/app/src/services/AdminService.js",["78"],"/home/node/app/src/services/MerchandService.js",["79","80","81","82","83","84"],"/home/node/app/src/components/Admin/MerchantsList.js",[],{"ruleId":"85","severity":1,"message":"86","line":6,"column":8,"nodeType":"87","messageId":"88","endLine":6,"endColumn":12},{"ruleId":"85","severity":1,"message":"89","line":8,"column":8,"nodeType":"87","messageId":"88","endLine":8,"endColumn":21},{"ruleId":"85","severity":1,"message":"90","line":14,"column":8,"nodeType":"87","messageId":"88","endLine":14,"endColumn":16},{"ruleId":"85","severity":1,"message":"91","line":31,"column":8,"nodeType":"87","messageId":"88","endLine":31,"endColumn":17},{"ruleId":"85","severity":1,"message":"92","line":34,"column":8,"nodeType":"87","messageId":"88","endLine":34,"endColumn":16},{"ruleId":"85","severity":1,"message":"93","line":127,"column":11,"nodeType":"87","messageId":"88","endLine":127,"endColumn":22},{"ruleId":"85","severity":1,"message":"94","line":3,"column":8,"nodeType":"87","messageId":"88","endLine":3,"endColumn":27},{"ruleId":"85","severity":1,"message":"95","line":4,"column":10,"nodeType":"87","messageId":"88","endLine":4,"endColumn":14},{"ruleId":"85","severity":1,"message":"96","line":5,"column":8,"nodeType":"87","messageId":"88","endLine":5,"endColumn":14},{"ruleId":"85","severity":1,"message":"97","line":18,"column":12,"nodeType":"87","messageId":"88","endLine":18,"endColumn":30},{"ruleId":"85","severity":1,"message":"98","line":19,"column":12,"nodeType":"87","messageId":"88","endLine":19,"endColumn":24},{"ruleId":"85","severity":1,"message":"99","line":52,"column":11,"nodeType":"87","messageId":"88","endLine":52,"endColumn":31},{"ruleId":"85","severity":1,"message":"100","line":57,"column":11,"nodeType":"87","messageId":"88","endLine":57,"endColumn":18},{"ruleId":"85","severity":1,"message":"101","line":62,"column":9,"nodeType":"87","messageId":"88","endLine":62,"endColumn":20},{"ruleId":"102","severity":1,"message":"103","line":12,"column":1,"nodeType":"104","endLine":15,"endColumn":3},{"ruleId":"85","severity":1,"message":"105","line":1,"column":31,"nodeType":"87","messageId":"88","endLine":1,"endColumn":37},{"ruleId":"85","severity":1,"message":"95","line":3,"column":10,"nodeType":"87","messageId":"88","endLine":3,"endColumn":14},{"ruleId":"106","severity":1,"message":"107","line":38,"column":8,"nodeType":"108","endLine":38,"endColumn":10,"suggestions":"109"},{"ruleId":"85","severity":1,"message":"110","line":41,"column":15,"nodeType":"87","messageId":"88","endLine":41,"endColumn":19},{"ruleId":"102","severity":1,"message":"103","line":13,"column":1,"nodeType":"104","endLine":16,"endColumn":3},{"ruleId":"111","severity":1,"message":"112","line":8,"column":19,"nodeType":"113","messageId":"114","endLine":8,"endColumn":48},{"ruleId":"111","severity":1,"message":"112","line":16,"column":21,"nodeType":"113","messageId":"114","endLine":16,"endColumn":50},{"ruleId":"111","severity":1,"message":"112","line":20,"column":22,"nodeType":"113","messageId":"114","endLine":20,"endColumn":51},{"ruleId":"111","severity":1,"message":"112","line":24,"column":21,"nodeType":"113","messageId":"114","endLine":24,"endColumn":35},{"ruleId":"111","severity":1,"message":"112","line":28,"column":23,"nodeType":"113","messageId":"114","endLine":28,"endColumn":37},{"ruleId":"102","severity":1,"message":"103","line":33,"column":1,"nodeType":"104","endLine":41,"endColumn":3},"no-unused-vars","'Demo' is defined but never used.","Identifier","unusedVar","'ListSubheader' is defined but never used.","'Collapse' is defined but never used.","'InboxIcon' is defined but never used.","'SendIcon' is defined but never used.","'handleClick' is assigned a value but never used.","'MerchandDataService' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'currentTransaction' is assigned a value but never used.","'currentIndex' is assigned a value but never used.","'setActiveTransaction' is assigned a value but never used.","'classes' is assigned a value but never used.","'newRegister' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useRef' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getInformations'. Either include it or remove the dependency array.","ArrayExpression",["115"],"'data' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression",{"desc":"116","fix":"117"},"Update the dependencies array to be: [getInformations]",{"range":"118","text":"119"},[1152,1154],"[getInformations]"]